================================
How to Use 5-text_indentation.py
================================

This module defines a text-indentation-printing function ``def text_indentation(text)``.

Usage
=====
Texts are printed with 2 new lines after each of these characters: ``.``, ``?`` and ``:``. The argument   
``text`` represents the strings to be printed.

::

    >>> text_indentation = __import__('5-text_indentation').text_indentation
    >>> text_indentation("Hey guys")
    Hey guys
    <BLANKLINE>

No spaces are printed at the beginnig of each line

::
    >>> text_indentation("   Welcome!")
    Welcome!
    <BLANKLINE>

::

    >>> text_indentation("           ")

Similarly, no spaces are printed at the end of each line

::

    >>> text_indentation("Goodbye!    ")
    Goodbye!
    <BLANKLINE>

::

    >>> text_indentation("  Things are getting better.  We  keep growing."  )
    Things are getting better.
    <BLANKLINE>
    We  keep growing.
    <BLANKLINE>

New lines are only printed for the characters ``.``, ``?``, and ``:`` -
text not ending with one of these characters is not ended with a new line.

::

    >>> text_indentation("We can do this boys, let's get to work")
    We can do this boys, let's get to work
    <BLANKLINE>

new lines within a string are printed a normal blankline

::

    >>> text_indentation("we are printing a new line:\nwow it works!")
    we are printing a new line:
    <BLANKLINE>
    <BLANKLINE>
    wow it works!
    <BLANKLINE>

::

    >>> text_indentation("\n\n\n\n We want to print four new lines now.")
    <BLANKLINE>
    <BLANKLINE>
    <BLANKLINE>
    <BLANKLINE>
    We want to print four new lines now.
    <BLANKLINE>

An example with different delimiters:

::

    >>> text_indentation("Lorem ipsum dolor sit amet, consectetur adipiscing "
    ... "elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas "
    ... "commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, "
    ... "sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri "
    ... "nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est "
    ... "moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde "
    ... "sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid "
    ... "voles, postea. Quae animi affectio suum cuique tribuens atque hanc, "
    ... "quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas "
    ... "videres") # doctest: +NORMALIZE_WHITESPACE
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi litteram videor an totas paginas commovere?
    <BLANKLINE>
    Non autem hoc:
    <BLANKLINE>
    igitur ne illud quidem.
    <BLANKLINE>
    Fortasse id optimum, sed ubi illud:
    <BLANKLINE>
    Plus semper voluptatis?
    <BLANKLINE>
    Teneo, inquit, finem illi videri nihil dolere.
    <BLANKLINE>
    Transfer idem ad modestiam vel temperantiam, 
    quae est moderatio cupiditatum rationi oboediens.
    <BLANKLINE>
    Si id dicis, vicimus.
    <BLANKLINE>
    Inde sermone vario sex illa a Dipylo stadia confecimus.
    <BLANKLINE>
    Sin aliud quid voles, postea.
    <BLANKLINE>
    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    <BLANKLINE>
    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

Invalid Text
============

The parameter ``text`` must be a string. Otherwise, TypeError is raised.

::

    >>> text_indentation(34)
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation({"January: 5, "March": 10})
    Traceback (most recent call last):
    TypeError: text must be a string